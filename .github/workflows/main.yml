name: 发布软件

on:
  push: # 代码推送到main分支自动触发工作流
    branches:
      - main
  workflow_dispatch: # 手动触发

permissions: write-all # 给所有工作写权限

jobs:
  jobs_window:
    name: 构建window软件
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: 编译环境设置 Python 3.9.13
        uses: actions/setup-python@v4
        with:
          python-version: "3.9.13"
          architecture: "x64"
          cache: 'pip'
      - name: 下载依赖文件
        run: pip install -r requirements.txt
      - name: 编译exe
        run: |
          pyinstaller --noconfirm --onefile --windowed "main.py"
      - name: 上传产物
        uses: actions/upload-artifact@v3
        with:
          name: window
          path: ./dist/*.exe

  jobs_macos:
    name: 构建macos软件
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: 编译环境设置 Python 3.9.13
        uses: actions/setup-python@v4
        with:
          python-version: "3.9.13"
          architecture: "x64"
          cache: 'pip'
      - name: 下载依赖文件
        run: pip install -r requirements.txt
      - name: 编译 MacOS.app
        run: |
          pyinstaller -F -w "main.py"
      - name: 创建压缩包
        run: |
          cd ./dist
          zip -r ./main.zip ./main.app
      - name: 上传产物
        uses: actions/upload-artifact@v3
        with:
          name: macos
          path: ./dist/*.zip


  jobs4:
    needs: [jobs_window,jobs_macos ]
    name: 发布版本
    runs-on: ubuntu-latest
    steps:
      - name: 下载产物
        id: download
        uses: actions/download-artifact@v3
        with:
          path: ./
      - name: 读入环境信息
        run: |
          echo ${{steps.download.outputs.download-path}}
          ls -R
      - name: 发布文件
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true # 覆盖文件
          #draft: true # 草稿 自己可见 版本号会保持一样 默认是自动发布 latest
          #prerelease: true # 预发布 别人可以看到 版本号会继续加
          tag: "auto build"
          body: "更新" # 输出
          artifacts: "window/*.exe,macos/*.zip"
